== 版本衝突

=== 情境

回到家裡，有個好想法浮現，當經過了一連串的實作與送交後，忽然發現遠端版本庫中有公司上傳的版還沒被抓下來。這時候版本不允許被直接送交。你必須作一些決定，來解決這個問題並且保證重要的資料都被留下來。也就是說衝突的兩個版本都需要被留下來。

在 SourceTree 的介面中，可以看到類似下圖的樣子。

image:images/rebase001.png[版本衝突示意圖]

在這種狀況下使用 push 推送版本到遠端，會得到類似下圖的錯誤訊息。

image:images/rebase000.png[版本衝突不允許推送的錯誤訊息]

可以看到由最開始的版本為基礎，在本地端(藍線)和遠端(紅線)各送交了新的分支。在要推送資料到遠端時，SourceTree 會出現錯誤，告訴你現在遠端版本無法直接附加上本地端的新版本。

=== Rebase 版本庫

對於同一個分支，git 傾向多使用 rebase 取代 merge，因為這樣能產生比較清楚的版本演進歷程。以下是它的實現步驟。

.Step 1 確認位於在本地的分支上

進行 rebase 先確定現在的位置是對的，檢查看看自己是不是在正確分支的尾端。在 SourceTree 的表現上，是將版本節點以白點(或說空心點)表示，如下圖就表示現在正處於本地 master 版本的尾端。

image:images/rebase002.png[確認白點位在本地方支的尾端]

[TIP]
不是所有的 rebase 都必須在 master 分支上，所有的分支都可以進行這樣的操作。


.Step 2 選擇工具列上的 Pull 工具，選擇

選擇工具列上上的 **Fetch** 按鈕，選擇 **fetch on all remotes**，按下 **OK**，確認已經抓回遠端完整的版本資訊。如下圖所示：

image:images/rebase003.png[選擇 Fetch > fetch on all remotes > OK]

.Step 3 將 rebase 後的新分支，上傳回遠端版本庫

由下圖可以看到，本地端新增的兩個版本，接續在遠端的版本之後，這樣版本歷程中就不會看到許多 merge 遠端版本的記錄。接著，就可以照著平常 push 到遠端版本庫的作法推送新增的程式碼了。

image:images/rebase004.png[兩個相同起源的分支被合而為一]

可以看到在工具列的按鈕上所顯示的數字，沒有任何需要 Pull 的資料，而 Push 的部分則有兩個版本(本地新土曾的版本)可以推送到遠端。

==== 處理術突

但如果 git 無法判斷要如何合併兩個版本時，就會出現版本衝突，要在排除之後才能繼續進行 rebase 的工作。如果在進行上述 rebase 的時候出現底下的訊息，就表示出現術突。

image:images/rebase005.png[出現衝突時，會出現的訊息視窗]

，這個時候可以比較兩個版本的檔案，進行內容的選擇，或直接選擇某一版本並捨棄另一個。底下先列出比較兩㮔版本的操作流程。

.Step 1 選擇發生衝突的檔案，開啟合併工具

出現衝突的時候，在版本記錄中會多出一個的未送交的記錄，如下圖。

image:images/rebase006.png[衝突發生時，會出現一個等待解決衝突的未送交版本]

點選這個記錄，可以看到發生衝突的檔案前，出現了驚嘆號的圖示，在檔案上按右鍵，選擇 Resolve Conflicts > Launch External Merge Tool 

image:images/rebase007.png[在發生衝突的檔案上按右鍵，選擇合併工具開啟]

.Step 2 比較版本，進行衝突的編輯

在下例圖中，可以看到左邊的本地端版本，與右邊遠端版本的差異。其中第 4 處發生衝突。用滑鼠點擊中間灰色的部分。再選擇右下角對應處理方式。在此例中，我選擇了兩個版本都保留，而遠端版本在後。

image:images/rebase008.png[合併工具的操作介面，由此解決版本間的衝突]

.Step 3 將解決衝突後的檔案，加入 Stage 中

編修完術突後存檔離開工具，可以發現 Unstaged files 的清單中多出了一些檔案(如下圖所示)。包含稍早合併完成的結果，以及工具替我們備份的原始檔案。選擇解決衝突的檔案加入 stage 取代既有、有衝突的版本。這個動作就是告訴 git 這個檔案的衝突已經被解決了。


image:images/rebase009.png[編修完衝突，可以發現 unstaged files 清單中出現該檔案]

[TIP]
======
若是沒有看到檔案出現，可以用滑鼠點擊 Staged files 清單的空白處， SourceTree 會重新整理清單。
======

[TIP]
======
另外出現副檔名是 orig 的檔案，是原來有衝突的內容。就別放進 stage 裡，免得 git 誤話。事後再找間把它刪除即可。
======

.Step 4 送交、繼續 rebase

當所有衝突都解決，並將合併好的檔案放入 stage 中後。可以選擇工具列上的 **Commit** 按鈕，會出現下圖的對話框，選擇 **Continue Rebase** 繼續 Rebase。

image:images/rebase010.png[詢問是否繼續 rebase 的對話框] 

[TIP]
======
git 進行 rebase 的時候，會一個個版本分開合併，若是在處理下一個版本時，仍然發生衝突。則需要重複這整個流程，直到 rebase 完成。
======

